{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { emailSigninStart, signinSuccess, signinFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n} // signIn\n\nexport function* singinWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* SignOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n} // on action\n\nexport function* onGoogleSinginStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, singinWithGoogle);\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signinWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, SignOutUser);\n}\nexport function* SignUpUser({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield call(createUserProfileDocument, (user, {\n      displayName\n    }));\n    yield put(signUpSuccess());\n    yield put(emailSigninStart({\n      email,\n      password\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, SignUpUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSinginStart), call(onEmailSigninStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/Mohamed Sahel/Desktop/me/career/React/clothing-store/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","emailSigninStart","signinSuccess","signinFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","singinWithGoogle","signInWithPopup","user","signinWithEmail","payload","email","password","signInWithEmailAndPassword","SignOutUser","signOut","isUserAuthenticated","onGoogleSinginStart","GOOGLE_SIGN_IN_START","onEmailSigninStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","SignUpUser","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport userActionTypes from \"./user.types\";\r\nimport { emailSigninStart,\r\n        signinSuccess,\r\n         signinFailure,\r\n         signOutSuccess,\r\n         signOutFailure,  \r\n         signUpSuccess,\r\n         signUpFailure   \r\n         } from \"./user.actions\";\r\n\r\nimport { auth,\r\n         googleProvider,\r\n         createUserProfileDocument,\r\n         getCurrentUser\r\n        } from \"../../firebase/firebase.utils\";\r\n\r\n\r\nexport function* getSnapshotFromUserAuth( userAuth ){\r\n\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n\r\n    } catch (error) {\r\n        yield put(signinFailure(error))\r\n    }\r\n}\r\n\r\n// signIn\r\nexport function* singinWithGoogle() {\r\n    try{\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        yield put(signinFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signinWithEmail({ payload: {email, password} }){\r\n    try{\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        yield put(signinFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* SignOutUser() {\r\n    try{\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n\r\n    }catch (error) {\r\n        yield put(signOutFailure())\r\n    }\r\n}\r\n\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n        \r\n    } catch (error) {\r\n        yield put(signinFailure(error))\r\n    }\r\n}\r\n\r\n// on action\r\nexport function* onGoogleSinginStart() {\r\n    yield takeLatest(\r\n        userActionTypes.GOOGLE_SIGN_IN_START,\r\n        singinWithGoogle\r\n    )\r\n}\r\n\r\nexport function* onEmailSigninStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signinWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, SignOutUser)\r\n}\r\n\r\nexport function* SignUpUser({ payload: {email, password, displayName} }) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n          );\r\n\r\n        yield call(createUserProfileDocument, (user, { displayName }));\r\n        yield put(signUpSuccess())\r\n        yield put(emailSigninStart({email, password}))\r\n\r\n    } catch (error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, SignUpUser)\r\n}\r\n\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSinginStart),\r\n        call(onEmailSigninStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}