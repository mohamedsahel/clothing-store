{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\src\\\\components\\\\signup\\\\signup.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { SignupContainer, Title } from \"./signup.styles\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    await signUpStart(userCredentials);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignupContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \" SIGN UP \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Mohamed Sahel/Desktop/me/career/React/clothing-store/src/components/signup/signup.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignupContainer","Title","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport {\r\n        SignupContainer,\r\n        Title\r\n        }\r\n        from \"./signup.styles\";\r\n\r\n\r\nconst SignUp = ({signUpStart, }) => {\r\n    const [userCredentials, setUserCredentials ] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n      event.preventDefault();\r\n  \r\n      if (password !== confirmPassword) {\r\n        alert(\"passwords don't match\");\r\n        return;\r\n      }\r\n      \r\n      await signUpStart(userCredentials)\r\n  \r\n    }\r\n\r\n\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setUserCredentials({...userCredentials, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <SignupContainer>\r\n            <Title>I do not have an account</Title>\r\n            <span>Sign up with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                type=\"text\" \r\n                name=\"displayName\" \r\n                value={displayName} \r\n                handleChange={handleChange}\r\n                label='Display Name'\r\n                required/>\r\n\r\n                <FormInput \r\n                type=\"email\" \r\n                name=\"email\" \r\n                value={email} \r\n                handleChange={handleChange}\r\n                label='Email'\r\n                required/>\r\n\r\n                <FormInput \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={password} \r\n                handleChange={handleChange}\r\n                label='Password'\r\n                required/>\r\n\r\n                <FormInput \r\n                type=\"password\" \r\n                name=\"confirmPassword\" \r\n                value={confirmPassword} \r\n                handleChange={handleChange}\r\n                label='Confirm Password'\r\n                required/>\r\n                \r\n                <CustomButton type=\"submit\"> SIGN UP </CustomButton>\r\n            </form>\r\n        </SignupContainer>\r\n    )\r\n    \r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}