{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\src\\\\components\\\\signin\\\\signin.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSigninStart, emailSigninStart } from \"../../redux/user/user.actions\";\nimport { SigninContainer, Title, ButtonsContainer } from \"./signin.styles\";\n\nconst SignIn = ({\n  emailSigninStart,\n  googleSigninStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSigninStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SigninContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" SIGN IN \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSigninStart,\n    isGoogleSingIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" SIGN IN with google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Mohamed Sahel/Desktop/me/career/React/clothing-store/src/components/signin/signin.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSigninStart","emailSigninStart","SigninContainer","Title","ButtonsContainer","SignIn","email","password","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;AAGA,SACQC,eADR,EAEQC,KAFR,EAGQC,gBAHR,QAIe,iBAJf;;AAOA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AAAA,oBAEVJ,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAFE;AAAA;AAAA,QAEjDC,eAFiD;AAAA,QAEhCC,kBAFgC;;AAAA,QAIhDH,KAJgD,GAI5BE,eAJ4B,CAIhDF,KAJgD;AAAA,QAIzCC,QAJyC,GAI5BC,eAJ4B,CAIzCD,QAJyC;;AAMxD,QAAMG,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAhB;AACH,GAJD;;AAMA,QAAMM,YAAY,GAAGF,KAAK,IAAI;AAAA,0BACFA,KAAK,CAACG,MADJ;AAAA,UAClBC,IADkB,iBAClBA,IADkB;AAAA,UACZC,KADY,iBACZA,KADY;AAE1BP,IAAAA,kBAAkB,mBAAMD,eAAN;AAAuB,OAACO,IAAD,GAAQC;AAA/B,OAAlB;AACH,GAHD;;AAOA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAII;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,KAAK,EAAEJ,KAHP;AAIA,IAAA,YAAY,EAAEO,YAJd;AAKA,IAAA,KAAK,EAAC,OALN;AAMA,IAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAEN,QAHP;AAIA,IAAA,YAAY,EAAEM,YAJd;AAKA,IAAA,KAAK,EAAC,UALN;AAMA,IAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAgBI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAGb,iBAAtC;AAA0D,IAAA,cAAc,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CAhBJ,CAJJ,CADJ;AA6BH,CAhDD;;AAmDA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAAqBW,QAAQ,CAACjB,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFX,CAAL,CAAnC;;AAMA,eAAeV,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\"\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { googleSigninStart, emailSigninStart } from \"../../redux/user/user.actions\";\r\n\r\n\r\nimport { \r\n        SigninContainer,\r\n        Title,\r\n        ButtonsContainer\r\n        } from \"./signin.styles\";\r\n\r\n\r\nconst SignIn = ({ emailSigninStart, googleSigninStart }) => {\r\n\r\n    const [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        emailSigninStart(email, password)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setUserCredentials({ ...userCredentials, [name]: value })\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <SigninContainer>\r\n            <Title>I already have an account</Title>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput \r\n                type=\"text\" \r\n                name=\"email\" \r\n                value={email} \r\n                handleChange={handleChange}\r\n                label='email'\r\n                required/>\r\n\r\n                <FormInput \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={password} \r\n                handleChange={handleChange}\r\n                label='password'\r\n                required/>\r\n                <ButtonsContainer>\r\n                    <CustomButton type=\"submit\"> SIGN IN </CustomButton>\r\n                    <CustomButton type='button' onClick={ googleSigninStart } isGoogleSingIn> SIGN IN with google</CustomButton>\r\n                </ButtonsContainer>\r\n            </form>\r\n        </SigninContainer>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSigninStart: () => dispatch(googleSigninStart()),\r\n    emailSigninStart: (email, password) => dispatch(emailSigninStart({email, password}))\r\n})\r\n  \r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}