{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mohamed Sahel\\\\Desktop\\\\me\\\\career\\\\React\\\\clothing-store\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyApQE4EGidPdoWxi82Yhc2Inh0kmlsZ0oI\",\n  authDomain: \"crwn-db-43174.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-43174.firebaseio.com\",\n  projectId: \"crwn-db-43174\",\n  storageBucket: \"crwn-db-43174.appspot.com\",\n  messagingSenderId: \"259919891762\",\n  appId: \"1:259919891762:web:6eab2011331e0667269b2b\",\n  measurementId: \"G-C8SJMVVDBC\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log(`error creating user : ${error.message}`);\n    }\n  }\n\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollections.reduce((accumalator, collection) => {\n    accumalator[collection.title.toLowerCase()] = collection;\n    return accumalator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Mohamed Sahel/Desktop/me/career/React/clothing-store/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","convertCollectionsSnapshotToMap","collections","transformedCollections","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumalator","collection","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyApQE4EGidPdoWxi82Yhc2Inh0kmlsZ0oI\",\r\n    authDomain: \"crwn-db-43174.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-43174.firebaseio.com\",\r\n    projectId: \"crwn-db-43174\",\r\n    storageBucket: \"crwn-db-43174.appspot.com\",\r\n    messagingSenderId: \"259919891762\",\r\n    appId: \"1:259919891762:web:6eab2011331e0667269b2b\",\r\n    measurementId: \"G-C8SJMVVDBC\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`/users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch(error) {\r\n        console.log(`error creating user : ${error.message}`)\r\n      }\r\n\r\n    }\r\n\r\n    return userRef;\r\n  }\r\n\r\n  export const convertCollectionsSnapshotToMap = collections => {\r\n    const transformedCollections = collections.docs.map(doc => {\r\n      const { title, items } = doc.data();\r\n\r\n      return {\r\n        routeName: encodeURI(title.toLowerCase()),\r\n        id: doc.id,\r\n        title,\r\n        items\r\n      }\r\n    })\r\n    return transformedCollections.reduce((accumalator, collection) => {\r\n      accumalator[collection.title.toLowerCase()] = collection;\r\n      return accumalator\r\n    }, {});\r\n  }\r\n\r\n  export const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n      const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n        unsubscribe();\r\n        resolve(userAuth);\r\n      }, reject)\r\n    })\r\n  }\r\n\r\n  export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc();\r\n      batch.set(newDocRef, obj)\r\n    });\r\n\r\n    return await batch.commit();\r\n  }\r\n\r\n\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  \r\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  googleProvider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n  \r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}